class BinarySearchTree:public BinaryTree{
	public:
		void takeInput(Node* &root) {
			int data;
			cin >> data;
			
			while (data != -1) {
				root = insertBST(root, data);
				cin >> data;
			}
		}
		
		Node* insertBST (Node* &root, int data) {
			if (root == nullptr) {
				root = new Node(data);
				return root;
			}
			
			if (data > root -> data) 
				root -> right = insertBST(root->right, data);
			else 
				root -> left = insertBST(root->left, data);
				
			return root;
		}
		Node* search(Node* root, int key) {
		    if (root == NULL || root->data == key)
		        return root;
		        
		    if (root->data < key)
		        return search(root->right, key);
		
		    return search(root->left, key);
		}
};
